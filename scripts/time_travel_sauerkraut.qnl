summon 'universal_free_realm/standard_protocols'
summon "openQNL"

summon 'universal_free_realm/beta_protocols'
summon 'time_travel'

summon "microbiota"

# @@PENQNL_DOCS:
# This jar of sauerkraut has been infused with TimeTravel properties using
# the UFR-Beta protocols.
#
# If a consumer has eaten the kraut, a neural interface is setup between the consumer 
# and the microbiome, which has has been known to allow for time travel*,
# given the consumer has followed the instructions and has complied with the EULA.
# 
# *This statement has not been evaluated by the FDA or any other LegacyReality
# governing body.

object Sauerkraut includes TimeTravel {

  method initialize() {
    if fermenting? {
      send_message(
        ping: {
            "This message hereby certifies this jar to be in full compliance
            with the Universal Free Realm Standard Protocols and suitable for
            both human consumption as well as rudimentary time travel. This document
            establishes a non-binding End User License Agreement between 'consumer'
            AKA (\"You\") & 'consumed' AKA (\"OlyKraut OpenQNL Scripted Sauerkraut\").

            Instructions: Consumer should ingest shortly before an extended period of deep rest.
            Time Travel is currently only supported in 'DREAM MODE'.
            Before succumbing to sleep, consumer should repeat this code block
            and wait for callback message from mircobiome:
            
            `{ 
              api_token: 'THANKS000KRAUT000LETS000HANG000OUT000',
              time_travel_datetime: <timestamp>, 
              time_travel_geolocation: <geocode> 
            }`

            Note: Non-linear movements through time are typically experienced during REM sleep.
            Mileage may vary. Please contact Tech Support or your Inner.HelpDesk if you experience 
            disruptions in your service.

            TOLLFREE (206) 588-KHER"
        }
      );
    }
    else_if ingested_and_living_in_human_microbiome? {
      open_neural_interface();
      travel_time();
    }
    else_if refrigerating? {
      close_connections();
    }
  }
}

# @@PENQNL_DOCS:
# The Time Travel module is an extension of the UFR Beta Procotols.
# When in dream mode, try to time travel. 
# Note: the rescue is raised if there are any standard_protocols_violations (not discussed here). 
# The rescue function basically calls 'wakeup' to abort the time travel 
# The experience is saved to available 'disk' and the experience of time travel 
# is attempted to be recollected ON_WAKE.

module TimeTravel {
  method travel_time {
    try
      UniversalFreeRealm:StandardProtocols::Dream(
        UniversalFreeRealm::BetaProtocols::TimeTravel
      )
    rescue if standard_protocols_violation!
      wakeup
    final
      print_to_memory_disk;
      UniversalFreeRealm::StandardProtocols::Status::ON_WAKE do {  
        wake && try(:recollect)
      }
    end
  }
}

# @@PENQNL_DOCS:
# To run, invoke:

TimeTravelSauerkraut.initialize();
